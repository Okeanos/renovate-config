# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# https://docs.github.com/en/actions/writing-workflows
name: Verify

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      editorconfig:
        description: Run EditorConfig linter
        default: true
        type: boolean
      gitleaks:
        description: Run Gitleaks (Secret scanner)
        default: true
        type: boolean
      hadolint:
        description: Run hadolint (Dockerfile linter)
        default: false
        type: boolean
      markdownlint:
        description: Run Markdown linter
        default: true
        type: boolean
      renovate:
        description: Run renovate-config-validator
        default: true
        type: boolean
      shellcheck:
        description: Run shellcheck (shell script linter)
        default: true
        type: boolean
      taplo:
        description: Run taplo (TOML linter)
        default: false
        type: boolean
      yamllint:
        description: Run yamllint (YAML linter)
        default: true
        type: boolean

# https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
permissions:
  contents: read

jobs:
  editorconfig:
    runs-on: ubuntu-latest
    if: ${{ inputs.editorconfig || true }}
    steps:
      - uses: actions/checkout@v4
      - name: Run EditorConfig Checker
        env:
          EDITORCONFIG_VERSION: "3.0.3"
          EDITORCONFIG_SHASUM: "fc698b0bf5bca0d42e28dd59d72e25487a51f645ca242c5f74bae975369f16aa"
        run: |
          curl --fail --silent --show-error --location --output editorconfig.tar.gz \
            https://github.com/editorconfig-checker/editorconfig-checker/releases/download/v${EDITORCONFIG_VERSION}/ec-linux-amd64.tar.gz
          echo "${EDITORCONFIG_SHASUM} editorconfig.tar.gz" | sha256sum --check
          tar -xzf editorconfig.tar.gz bin/ec-linux-amd64
          ./bin/ec-linux-amd64 --exclude .git
  gitleaks:
    runs-on: ubuntu-latest
    if: ${{ inputs.gitleaks || true }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Gitleaks
        env:
          GITLEAKS_VERSION: "8.21.1"
          GITLEAKS_SHASUM: "b1e20dfbd81fa5eeefc91ace3371d4db75d2250c0d426cb6acf1e51722726779"
        run: |
          curl --fail --silent --show-error --location --output gitleaks.tar.gz \
            https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
          echo "${GITLEAKS_SHASUM} gitleaks.tar.gz" | sha256sum --check
          tar -xzf gitleaks.tar.gz gitleaks
          ./gitleaks dir --verbose --redact .
  hadolint:
    runs-on: ubuntu-latest
    if: ${{ inputs.hadolint || false }}
    steps:
      - uses: actions/checkout@v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "Dockerfile"
  markdownlint:
    runs-on: ubuntu-latest
    if: ${{ inputs.markdownlint || true }}
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v17
  renovate:
    runs-on: ubuntu-latest
    if: ${{ inputs.renovate || true }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract Tool Versions
        id: tool-versions
        run: |
          node_version=$(grep -F 'node' .mise.toml | cut -d '=' -f2 | xargs)
          echo "node_version=${node_version}" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.tool-versions.outputs.node_version }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Renovate
        run: pnpm install
      - name: Run Renovate Config Validator
        run: |
          set +e
          validation_result=$(npx --yes --package renovate -- renovate-config-validator --strict default.json5)
          # use negative check because we don't really no what other exit messages are besides
          # 'WARN: Config migration necessary' as shown in the documentation
          if [[ $(echo -n "${validation_result}" | grep -cF "Config validated successfully") != 1 ]]; then
            configs={$(echo "${validation_result}" | tail -n +3)}
            echo "${configs}" | jq --raw-output --sort-keys '.oldConfig' > old.json
            echo "${configs}" | jq --raw-output --sort-keys '.newConfig' > new.json
            git diff --no-index --color=always -- old.json new.json
            exit 1
          fi
  shellcheck:
    runs-on: ubuntu-latest
    if: ${{ inputs.shellcheck || true }}
    steps:
      - uses: actions/checkout@v4
      - uses: ludeeus/action-shellcheck@2.0.0
  taplo:
    runs-on: ubuntu-latest
    if: ${{ inputs.taplo || true }}
    steps:
      - uses: actions/checkout@v4
      - name: Run Taplo
        env:
          TAPLO_VERSION: "0.9.3"
          TAPLO_SHASUM: "71d655dc3f69ce30454cfade92fdbe846c0ba4aa3afa68f3ff0d216966d0d3c2"
        run: |
          curl --fail --silent --show-error --location --output taplo.gz \
            https://github.com/tamasfe/taplo/releases/download/${TAPLO_VERSION}/taplo-full-linux-x86_64.gz
          echo "${TAPLO_SHASUM} taplo.gz" | sha256sum --check
          gunzip --decompress taplo.gz
          chmod +x ./taplo
          ./taplo format --check --diff
          ./taplo check --default-schema-catalogs
  yamllint:
    runs-on: ubuntu-latest
    if: ${{ inputs.yamllint || true }}
    steps:
      - uses: actions/checkout@v4
      - name: Run yamllint
        run: |
          pip install yamllint
          yamllint .
