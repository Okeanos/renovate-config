{
	// See https://docs.renovatebot.com/configuration-options/ for configuration options
	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
	"description": "Custom Renovate Config",
	"extends": [
		// want to have a list of dependencies and central place to interact with Renovate
		":dependencyDashboard",
		// explicitly upgrade to particular new major versions, don't hide them
		":separateMajorReleases",
		// patches and minor releases (according to semver) are fine together
		":combinePatchMinorReleases",
		// do not want unstable/testing/beta releases unless we are already explicitly using them
		":ignoreUnstable",
		// create all PRs at once, no delay, no "slow ramp up"
		":prImmediately",
		":prHourlyLimitNone",
		":prConcurrentLimitNone",
		// make PRs with semantic commit messages, depends on whether Renovate detects semantic commits to begin with
		// see https://docs.renovatebot.com/semantic-commits/
		":semanticCommits",
		":semanticPrefixChore",
		// Ignore node_modules, bower_components, vendor and various test/tests (except for nuget) directories.
		":ignoreModulesAndTests",
		// explicitly mention if a vulnerability is patched by a PR
		":enableVulnerabilityAlerts",
		// keep PRs up to date with the target branch so PR builds always show up-to-date information
		":rebaseStalePrs",
		// Renovate maintained workarounds for versioning handling in specific cases
		"workarounds:doNotUpgradeFromAlpineStableToEdge"
	],
	"recreateWhen": "auto", // Recreates only immortal PRs (default), https://docs.renovatebot.com/key-concepts/pull-requests/#immortal-prs
	"pruneStaleBranches": true, // Delete orphan branches and autoclose PRs (if e.g. taken care of already by other means)
	"prFooter": "This PR has been generated by [Renovate Bot](https://docs.renovatebot.com).",
	// provide some default labels for easier filtering
	"labels": [
		"dependencies",
		"renovate"
	],
	"vulnerabilityAlerts": {
		// provide custom labels if the PR is the result of a security alert
		// TODO: check whether default labels and vulnerabilityAlerts.labels is additive or the latter overrides it?!
		"labels": [
			"security",
			"dependencies",
			"renovate"
		]
	},
	// do not automatically create PRs for major releases, use the dependency dashboard (see extends config) to trigger them
	"major": {
		"dependencyDashboardApproval": true
	},
	// provide additional detection mechanisms for Renovate to manage dependencies
	"customManagers": [
		{
			// custom manager for https://github.com/coreos/butane
			// technically https://github.com/Okeanos/asdf-butane exists but isn't officially a mise/asdf repo so renovate won't know about it
			"customType": "regex",
			"fileMatch": [
				"^\\.mise\\.toml$"
			],
			"matchStrings": [
				"butane = \"(?<currentValue>[^\"'\\s\\n]+)"
			],
			"depNameTemplate": "coreos/butane",
			"datasourceTemplate": "github-releases",
		},
		{
			// custom manager for https://github.com/tamasfe/taplo
			// technically https://github.com/Okeanos/asdf-taplo exists but isn't officially a mise/asdf repo so renovate won't know about it
			"customType": "regex",
			"fileMatch": [
				"^\\.mise\\.toml$"
			],
			// the string taplo appears 2 times in .mise.toml: once for plugins & once for tools
			// we are only interested in the tools declaration because that contains the version number to increment
			"matchStringsStrategy": "combination",
			"matchStrings": [
				"!/taplo = \"https[^\"'\\s\\n]+/",
				"taplo = \"(?<currentValue>[^\"'\\s\\n]+)"
			],
			"depNameTemplate": "tamasfe/taplo",
			"datasourceTemplate": "github-releases"
		},
	],
	"packageRules": [
		{
			// semver says "anything goes" for v0 updates - so they need to be handled like major versions and shouldn't be grouped with
			// minor & patch updates
			"groupName": "all non-major dependencies (exclude 0.x.y)",
			"groupSlug": "all-minor-patch-semver",
			"matchPackageNames": [
				"*",
				// Traefik Releases are in the format of x.y (usually) and they release betas/release candidates without a suffix so Renovate
				// thinks it can group it together with everything else. This is wrong, because RCs aren't stable and shouldn't be used in
				// production
				"!traefik"
			],
			"matchUpdateTypes": [
				"minor",
				"patch"
			],
			"matchCurrentValue": "!/^([\\^~<=>v]+)?0\\./"
		},
		// Disable updates to Java by default because the major version is manually managed and up-to-date patch/minor versions are
		// automatically used on build of the project
		// data sources and package names from `workarounds:javaLTSVersions`
		{
			"matchDatasources": [
				"docker",
				"java-version"
			],
			"matchPackageNames": [
				"eclipse-temurin",
				"amazoncorretto",
				"adoptopenjdk",
				"openjdk",
				"java",
				"java-jre",
				"sapmachine",
				"/^azul/zulu-openjdk/",
				"/^bellsoft/liberica-openj(dk|re)-/",
				"/^cimg/openjdk/"
			],
			"enabled": false
		},
		{
			// group the asdf/mise findings into their own group because they require manual intervention (SHA sum fixes) in some places
			"groupName": "group updates requiring SHA sums",
			"groupSlug": "require-shasum-updates",
			"matchManagers": [
				"asdf",
				"mise",
			],
		},
		// Disable updates to PHP by default because the major version is manually managed and up-to-date patch/minor versions are
		// automatically used on build of the project
		{
			"matchDatasources": [
				"docker",
			],
			"matchPackageNames": [
				"php",
			],
			"enabled": false
		},
		// Add some additional labels to particular managers for easier grouping and filtering
		{
			"matchManagers": [
				"docker-compose",
				"dockerfile"
			],
			"addLabels": [
				"docker"
			]
		},
		{
			"matchManagers": [
				"github-actions"
			],
			"addLabels": [
				"actions",
				"pipeline"
			]
		},
		{
			"matchManagers": [
				"gradle",
				"gradle-wrapper"
			],
			"addLabels": [
				"gradle"
			]
		},
		{
			"matchManagers": [
				"maven",
				"maven-wrapper"
			],
			"addLabels": [
				"maven"
			]
		},
		{
			"matchManagers": [
				"npm"
			],
			"addLabels": [
				"node"
			]
		}
	]
}
